sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
sh: sysctl: command not found
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/psycopg2/__init__.py:144: UserWarning: The psycopg2 wheel package will be renamed from release 2.8; in order to keep installing from binary please use "pip install psycopg2-binary" instead. For details see: <http://initd.org/psycopg/docs/install.html#binary-install-from-pypi>.
  """)
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/gensim/models/phrases.py:494: UserWarning: For a faster implementation, use the gensim.models.phrases.Phraser class
  warnings.warn("For a faster implementation, use the gensim.models.phrases.Phraser class")
Failed to complete cronjob at ('*/1 * * * *', 'getdatabase_fromInspire.main')
Traceback (most recent call last):
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/sqlite3/base.py", line 296, in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django_crontab/crontab.py", line 145, in run_job
    func(*job_args, **job_kwargs)
  File "/Users/jgleyzes/Documents/My_Django_stuff/AcademicResults/getdatabase_fromInspire.py", line 184, in main
    new_article.tags.add(new_tag)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/fields/related_descriptors.py", line 920, in add
    self._add_items(self.source_field_name, self.target_field_name, *objs)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/fields/related_descriptors.py", line 1087, in _add_items
    for obj_id in new_ids
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/query.py", line 462, in bulk_create
    ids = self._batched_insert(objs_without_pk, fields, batch_size)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/query.py", line 1144, in _batched_insert
    self._insert(item, fields=fields, using=self.db)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/query.py", line 1125, in _insert
    return query.get_compiler(using=using).execute_sql(return_id)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/sql/compiler.py", line 1267, in execute_sql
    cursor.execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 100, in execute
    return super().execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 68, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 77, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/sqlite3/base.py", line 296, in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.OperationalError: database is locked
1
2
3
4
5
6
7
8
9
10
11
12
13
14
Database Imported!
Labels Created
Clusters created!
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/psycopg2/__init__.py:144: UserWarning: The psycopg2 wheel package will be renamed from release 2.8; in order to keep installing from binary please use "pip install psycopg2-binary" instead. For details see: <http://initd.org/psycopg/docs/install.html#binary-install-from-pypi>.
  """)
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/gensim/models/phrases.py:494: UserWarning: For a faster implementation, use the gensim.models.phrases.Phraser class
  warnings.warn("For a faster implementation, use the gensim.models.phrases.Phraser class")
Failed to complete cronjob at ('*/1 * * * *', 'getdatabase_fromInspire.main')
Traceback (most recent call last):
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/sqlite3/base.py", line 296, in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django_crontab/crontab.py", line 145, in run_job
    func(*job_args, **job_kwargs)
  File "/Users/jgleyzes/Documents/My_Django_stuff/AcademicResults/getdatabase_fromInspire.py", line 207, in main
    new_article.suggestion.add(new_suggestion)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/fields/related_descriptors.py", line 920, in add
    self._add_items(self.source_field_name, self.target_field_name, *objs)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/fields/related_descriptors.py", line 1087, in _add_items
    for obj_id in new_ids
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/query.py", line 462, in bulk_create
    ids = self._batched_insert(objs_without_pk, fields, batch_size)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/query.py", line 1144, in _batched_insert
    self._insert(item, fields=fields, using=self.db)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/query.py", line 1125, in _insert
    return query.get_compiler(using=using).execute_sql(return_id)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/sql/compiler.py", line 1267, in execute_sql
    cursor.execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 100, in execute
    return super().execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 68, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 77, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/sqlite3/base.py", line 296, in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.OperationalError: database is locked
1
2
3
4
5
6
7
8
9
10
11
12
13
14
Database Imported!
Labels Created
Clusters created!
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/psycopg2/__init__.py:144: UserWarning: The psycopg2 wheel package will be renamed from release 2.8; in order to keep installing from binary please use "pip install psycopg2-binary" instead. For details see: <http://initd.org/psycopg/docs/install.html#binary-install-from-pypi>.
  """)
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/gensim/models/phrases.py:494: UserWarning: For a faster implementation, use the gensim.models.phrases.Phraser class
  warnings.warn("For a faster implementation, use the gensim.models.phrases.Phraser class")
Failed to complete cronjob at ('*/1 * * * *', 'getdatabase_fromInspire.main')
Traceback (most recent call last):
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/sqlite3/base.py", line 296, in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django_crontab/crontab.py", line 145, in run_job
    func(*job_args, **job_kwargs)
  File "/Users/jgleyzes/Documents/My_Django_stuff/AcademicResults/getdatabase_fromInspire.py", line 184, in main
    new_article.tags.add(new_tag)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/fields/related_descriptors.py", line 920, in add
    self._add_items(self.source_field_name, self.target_field_name, *objs)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/fields/related_descriptors.py", line 1087, in _add_items
    for obj_id in new_ids
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/query.py", line 462, in bulk_create
    ids = self._batched_insert(objs_without_pk, fields, batch_size)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/query.py", line 1144, in _batched_insert
    self._insert(item, fields=fields, using=self.db)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/query.py", line 1125, in _insert
    return query.get_compiler(using=using).execute_sql(return_id)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/models/sql/compiler.py", line 1267, in execute_sql
    cursor.execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 100, in execute
    return super().execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 68, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 77, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Users/jgleyzes/DjangoProjects/django/django/db/backends/sqlite3/base.py", line 296, in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.OperationalError: database is locked
1
2
3
4
5
6
7
8
9
10
11
12
13
14
Database Imported!
Labels Created
Clusters created!
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/psycopg2/__init__.py:144: UserWarning: The psycopg2 wheel package will be renamed from release 2.8; in order to keep installing from binary please use "pip install psycopg2-binary" instead. For details see: <http://initd.org/psycopg/docs/install.html#binary-install-from-pypi>.
  """)
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/gensim/models/phrases.py:494: UserWarning: For a faster implementation, use the gensim.models.phrases.Phraser class
  warnings.warn("For a faster implementation, use the gensim.models.phrases.Phraser class")
1
2
3
4
5
6
7
8
9
10
11
12
13
14
Database Imported!
Labels Created
Clusters created!
Populating Completed!
